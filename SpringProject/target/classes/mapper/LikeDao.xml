<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.market.model.LikeDAO">
	
	<!-- 찜 클래스 목록 (장소/해시태그/제목/이미지) -->
	<select id="likeClass" parameterType="int" resultType="com.market.model.ClassDTO">
		select * from frip_class 
		where class_num in(select like_target from frip_like where like_writer = #{mem_num} and like_flag = 1)
		
		<!-- select *
		from frip_class f join frip_option o
		on f.class_num = o.option_classnum
		where class_num in(select like_target from frip_like where like_writer = #{mem_num} and like_flag = 1) -->
		
		<!-- 페이징 처리 
			<![CDATA[
			select * from (select b.*, row_number() over(order by class_num) rnum from frip_class b 
			where class_num in(select like_target from frip_like where like_writer = #{class_memNum} and like_flag = 1)) 
			where rnum >= #{startNo} and rnum <= #{endNo}
		]]>  -->
	</select>
	
	<select id="nolikeClass" parameterType="int" resultType="com.market.model.ClassDTO">
		select * from frip_class 
		where not class_num in(select like_target from frip_like where like_writer = #{mem_num} and like_flag = 1)
	</select>
	
	<!-- 찜 클래스 별 옵션 상세정보 (가격) -->
	<select id="option_cont" parameterType="int" resultType="com.market.model.OptionDTO">
		select * from frip_option 
		where option_classNum in(select class_num from frip_class 
		where class_num in(select like_target from frip_like 
		where like_writer = #{mem_num} and like_flag = 1))  
		
		<!--   select option_price
		from frip_class f join frip_option o
		on f.class_num = o.option_classnum
		where class_num in(select like_target from frip_like where like_writer = #{mem_num} and like_flag = 1) -->
		
	</select>
	
	<!-- 찜 클래스 별 별점 -->
	<select id="class_score"  parameterType="int" resultType="Integer">	        
		select NVL(review_score, 0)
		from frip_class
		left outer join (select review_classNum, avg(review_score) review_score from frip_review group by review_classNum)
		on class_num = review_classNum
		where class_num in(select like_target from frip_like
		where like_writer = #{mem_num} and like_flag = 1) order by class_num
	</select>
	
	<!-- 찜 클래스 개수 -->
	<select id="classList_count" parameterType="int" resultType="int">
		select count(*) from frip_class 
		where class_num in(select like_target from frip_like where like_writer = #{mem_num} and like_flag = 1)
	</select>
	
	<!-- 찜 호스트 목록  -->
	<select id="likeHost" parameterType="int"  resultType="com.market.model.HostDTO">
		select * from frip_host 
		where host_num in(select like_target from frip_like where like_writer = #{mem_num} and like_flag = 2)
	</select>
	
	<!-- 찜 호스트 별 상세정보 (이름/프로필) -->
	<select id="likeHostInfo"  parameterType="int"  resultType="com.market.model.MemberDTO">
		select * from frip_member 
		where mem_num in(select host_memnum from frip_host 
		where host_num in(select like_target from frip_like 
		where like_writer = #{mem_num} and like_flag = 2)) order by mem_num
	</select>
	
	<!-- 찜 호스트가 운영하는 클래스 개수 -->
	<select id="like_classCount" parameterType="int" resultType="Integer">
		select count(*), class_memnum from frip_class 
		where class_memnum in(select host_memnum from frip_host 
		where host_num in(select like_target from frip_like 
		where like_writer = #{mem_num} and like_flag = 2)) group by class_memnum
	</select>
	
	<!-- 찜 호스트 후기 개수 -->
	<select id="like_reviewCount" parameterType="int" resultType="Integer">
		select  count(r.review_classnum), c.class_memnum
		from frip_class c join frip_review r 
		on c.class_num = r.review_classnum
		where class_memnum in(select host_memnum from frip_host
		where host_num in(select like_target from frip_like 
		where like_writer = #{mem_num} and like_flag = 2)) group by class_memnum
		
		<!-- select count(*) from frip_review
		where review_classnum in(select class_num from frip_class 
		where class_memnum = #{host_memNum}) -->
	</select>
	
	<!-- 찜 호스트 찜 개수 -->
	<select id="like_likeCount" parameterType="int" resultType="Integer">
		select count(like_target) from frip_like where like_target in(select like_target from frip_like 
		where like_writer = #{mem_num} and like_flag = 2) and like_flag = 2 group by like_target
	</select>
	
	<!-- 호스트 상세정보 (이름/프로필) -->
	<select id="hosfInfo" parameterType="int" resultType="com.market.model.MemberDTO">
		select * from frip_member where mem_num = #{host_memNum} 
	</select>
	
	<!-- 호스트 소개(소개내용) -->
	<select id="hostContent" parameterType="int" resultType="com.market.model.HostDTO">
		select * from frip_host where host_memnum = #{host_memNum}
	</select>
	
	<!-- 호스트가 운영하는 클래스 개수  -->
	<select id="classCount" parameterType="int" resultType="int">
		select count(*) from frip_class where class_memnum = #{host_memNum}
	</select>
	
	<!-- 호스트 후기 개수 -->	
	<select id="reviewCount" parameterType="int" resultType="int">
		select count(*) from frip_review
		where review_classnum in(select class_num from frip_class 
		where class_memnum = #{host_memNum})
	</select>
	
	<!-- 호스트 찜 개수 -->
	<select id="likeCount" parameterType="int" resultType="int">
		select count(*) from frip_like where like_target in(select host_num from frip_host where host_memnum = #{host_memNum}) and like_flag = 2
	</select>
	
	<!-- 호스트가 운영하는 클래스 목록  -->
	<select id="hostClass" parameterType="int" resultType="com.market.model.ClassDTO">
		select * from frip_class where class_memnum = #{host_memNum}
	</select>
	
	<!-- 호스트가 운영하는 클래스 옵션 상세정보 (가격) -->
	<select id="hostClassOption" parameterType="int" resultType="com.market.model.OptionDTO">
		select * from frip_option 
		where option_classnum in(select class_num from frip_class where class_memnum = #{host_memNum})
	</select>
	
	<!-- 호스트가 운영하는 클래스 별 별점 -->
	<select id="hostClassScore"  parameterType="int" resultType="Integer">	        
		select NVL(review_score, 0)
		from frip_class
		left outer join (select review_classNum, avg(review_score) review_score from frip_review group by review_classNum)
		on class_num = review_classNum
		where class_num in(select class_num from frip_class where class_memnum = #{host_memNum}) order by class_num
	</select>
	
	<!-- 호스트가 운영하는 클래스 모든 리뷰1 (회원이름/회원프로필/리뷰내용/리뷰작성일) -->
	<select id="classReview1"  parameterType="int" resultType="com.market.model.ReviewDTO">
		select r.review_num , r.review_regdate, r.review_cont, r.review_score, r.review_like, r.review_image, m.mem_name, m.mem_profileimg
		from frip_member m join frip_review r 
		on m.mem_num = r.review_writer
		where review_classnum in(select class_num from frip_class
		where class_memnum = #{host_memNum}) order by review_num
	</select>
	
	<!-- 호스트가 운영하는 클래스 모든 리뷰2 (클래스명/시작날짜/끝날짜) -->
	<select id="classReview2"  parameterType="int" resultType="com.market.model.ReviewDTO">
		select r.review_num, c.class_title, c.class_startDate, c.class_endDate
		from frip_class c join frip_review r 
		on c.class_num = r.review_classnum
		where review_classnum in(select class_num from frip_class
		where class_memnum = #{host_memNum}) order by review_num
	</select>
	
	<!-- 호스트가 운영하는 클래스 모든 리뷰3 (옵션명) -->
	<select id="classReview3"  parameterType="int" resultType="com.market.model.ReviewDTO">
		select r.review_num, o.option_name
		from frip_option o join frip_review r 
		on o.option_classnum = r.review_classnum
		where review_classnum in(select class_num from frip_class
		where class_memnum = #{host_memNum}) order by review_num
	</select>

	<!-- 좋아요 상태 -->
	<select id="review_status" parameterType="java.util.Map" resultType="int">
		select count(*) from frip_like where like_writer = #{like_writer} and like_target = #{like_target} and like_flag = 3
	</select>
	
	<!-- 좋아요 누른 리뷰 리스트 -->
	<select id="review_like_list" parameterType="java.util.Map"  resultType="Integer">
		<!-- select * from frip_like where like_writer = #{mem_num} and like_flag = 3 order by like_target -->
		select NVL(like_target, 0) from frip_review
		left outer join (select like_target from frip_like where like_writer = #{mem_num} and like_flag = 3 order by like_target)
		on review_num  = like_target
		where review_classnum in(select class_num from frip_class where class_memnum = #{host_memNum}) order by review_num
	</select>

	<!-- 리뷰 좋아요 -->
	<update id="review_like_plus" parameterType="int">
		update frip_review set review_like = review_like + 1 where review_num = #{review_no}
	</update>
	
	<!-- 리뷰 싫어요 -->
	<update id="review_like_minus" parameterType="int">
		update frip_review set review_like = review_like - 1 where review_num = #{review_no}
	</update>
	
	<!-- 좋아요 DB 삭제 -->
	<delete id="review_del" parameterType="java.util.Map">
		delete from frip_like where like_writer = #{like_writer} and like_target = #{like_target} and like_flag = 3
	</delete>
	
	<!-- 좋아요 DB 추가 -->
	<insert id="review_add" parameterType="java.util.Map">
		insert into frip_like values(#{like_writer}, #{like_target}, 3)
	</insert>
	
	<!-- 리뷰 좋아요 개수 -->
	<select id="review_like_count" parameterType="int" resultType="int">
		select review_like from frip_review where review_num = #{review_no}
	</select>
	
	
	<!-- score_high -->
	<!-- 호스트가 운영하는 클래스 모든 리뷰1 (회원이름/회원프로필/리뷰내용/리뷰작성일) -->
	<select id="review_highScore1"  parameterType="int" resultType="com.market.model.ReviewDTO">
		select r.review_num , r.review_regdate, r.review_cont, r.review_score, r.review_like, r.review_image, m.mem_name, m.mem_profileimg
		from frip_member m join frip_review r 
		on m.mem_num = r.review_writer
		where review_classnum in(select class_num from frip_class
		where class_memnum = #{host_memNum}) order by review_score desc
	</select>
	
	<!-- 호스트가 운영하는 클래스 모든 리뷰2 (클래스명/시작날짜/끝날짜) -->
	<select id="review_highScore2"  parameterType="int" resultType="com.market.model.ReviewDTO">
		select r.review_num, c.class_title, c.class_startDate, c.class_endDate
		from frip_class c join frip_review r 
		on c.class_num = r.review_classnum
		where review_classnum in(select class_num from frip_class
		where class_memnum = #{host_memNum}) order by review_score desc
	</select>
	
	<!-- 호스트가 운영하는 클래스 모든 리뷰3 (옵션명) -->
	<select id="review_highScore3"  parameterType="int" resultType="com.market.model.ReviewDTO">
		select r.review_num, o.option_name
		from frip_option o join frip_review r 
		on o.option_classnum = r.review_classnum
		where review_classnum in(select class_num from frip_class
		where class_memnum = #{host_memNum}) order by review_score desc
	</select>
	
	<!-- 좋아요 누른 리뷰 리스트 -->
	<select id="highScore_like_list" parameterType="java.util.Map"  resultType="Integer">
		<!-- select * from frip_like where like_writer = #{mem_num} and like_flag = 3 order by like_target -->
		select NVL(like_target, 0) from frip_review
		left outer join (select like_target from frip_like where like_writer = #{mem_num} and like_flag = 3 order by like_target)
		on review_num  = like_target
		where review_classnum in(select class_num from frip_class where class_memnum = #{host_memNum}) order by review_score desc
	</select>
	
	<!-- score_low -->
	<!-- 호스트가 운영하는 클래스 모든 리뷰1 (회원이름/회원프로필/리뷰내용/리뷰작성일) -->
	<select id="review_lowScore1"  parameterType="int" resultType="com.market.model.ReviewDTO">
		select r.review_num , r.review_regdate, r.review_cont, r.review_score, r.review_like, r.review_image, m.mem_name, m.mem_profileimg
		from frip_member m join frip_review r 
		on m.mem_num = r.review_writer
		where review_classnum in(select class_num from frip_class
		where class_memnum = #{host_memNum}) order by review_score
	</select>
	
	<!-- 호스트가 운영하는 클래스 모든 리뷰2 (클래스명/시작날짜/끝날짜) -->
	<select id="review_lowScore2"  parameterType="int" resultType="com.market.model.ReviewDTO">
		select r.review_num, c.class_title, c.class_startDate, c.class_endDate
		from frip_class c join frip_review r 
		on c.class_num = r.review_classnum
		where review_classnum in(select class_num from frip_class
		where class_memnum = #{host_memNum}) order by review_score
	</select>
	
	<!-- 호스트가 운영하는 클래스 모든 리뷰3 (옵션명) -->
	<select id="review_lowScore3"  parameterType="int" resultType="com.market.model.ReviewDTO">
		select r.review_num, o.option_name
		from frip_option o join frip_review r 
		on o.option_classnum = r.review_classnum
		where review_classnum in(select class_num from frip_class
		where class_memnum = #{host_memNum}) order by review_score
	</select>
	
	<!-- 좋아요 누른 리뷰 리스트 -->
	<select id="lowScore_like_list" parameterType="java.util.Map"  resultType="Integer">
		<!-- select * from frip_like where like_writer = #{mem_num} and like_flag = 3 order by like_target -->
		select NVL(like_target, 0) from frip_review
		left outer join (select like_target from frip_like where like_writer = #{mem_num} and like_flag = 3 order by like_target)
		on review_num  = like_target
		where review_classnum in(select class_num from frip_class where class_memnum = #{host_memNum}) order by review_score
	</select>
	
	<!-- score_new -->
	<!-- 호스트가 운영하는 클래스 모든 리뷰1 (회원이름/회원프로필/리뷰내용/리뷰작성일) -->
	<select id="review_newScore1"  parameterType="int" resultType="com.market.model.ReviewDTO">
		select r.review_num , r.review_regdate, r.review_cont, r.review_score, r.review_like, r.review_image, m.mem_name, m.mem_profileimg
		from frip_member m join frip_review r 
		on m.mem_num = r.review_writer
		where review_classnum in(select class_num from frip_class
		where class_memnum = #{host_memNum}) order by review_regdate desc
	</select>
	
	<!-- 호스트가 운영하는 클래스 모든 리뷰2 (클래스명/시작날짜/끝날짜) -->
	<select id="review_newScore2"  parameterType="int" resultType="com.market.model.ReviewDTO">
		select r.review_num, c.class_title, c.class_startDate, c.class_endDate
		from frip_class c join frip_review r 
		on c.class_num = r.review_classnum
		where review_classnum in(select class_num from frip_class
		where class_memnum = #{host_memNum}) order by review_regdate desc
	</select>
	
	<!-- 호스트가 운영하는 클래스 모든 리뷰3 (옵션명) -->
	<select id="review_newScore3"  parameterType="int" resultType="com.market.model.ReviewDTO">
		select r.review_num, o.option_name
		from frip_option o join frip_review r 
		on o.option_classnum = r.review_classnum
		where review_classnum in(select class_num from frip_class
		where class_memnum = #{host_memNum}) order by review_regdate desc
	</select>
	
	<!-- 좋아요 누른 리뷰 리스트 -->
	<select id="newScore_like_list" parameterType="java.util.Map"  resultType="Integer">
		<!-- select * from frip_like where like_writer = #{mem_num} and like_flag = 3 order by like_target -->
		select NVL(like_target, 0) from frip_review
		left outer join (select like_target from frip_like where like_writer = #{mem_num} and like_flag = 3 order by like_target)
		on review_num  = like_target
		where review_classnum in(select class_num from frip_class where class_memnum = #{host_memNum}) order by review_regdate desc
	</select>
	
	<!-- score_like -->
	<!-- 호스트가 운영하는 클래스 모든 리뷰1 (회원이름/회원프로필/리뷰내용/리뷰작성일) -->
	<select id="review_likeScore1"  parameterType="int" resultType="com.market.model.ReviewDTO">
		select r.review_num , r.review_regdate, r.review_cont, r.review_score, r.review_like, r.review_image, m.mem_name, m.mem_profileimg
		from frip_member m join frip_review r 
		on m.mem_num = r.review_writer
		where review_classnum in(select class_num from frip_class
		where class_memnum = #{host_memNum}) order by review_like desc
	</select>
	
	<!-- 호스트가 운영하는 클래스 모든 리뷰2 (클래스명/시작날짜/끝날짜) -->
	<select id="review_likeScore2"  parameterType="int" resultType="com.market.model.ReviewDTO">
		select r.review_num, c.class_title, c.class_startDate, c.class_endDate
		from frip_class c join frip_review r 
		on c.class_num = r.review_classnum
		where review_classnum in(select class_num from frip_class
		where class_memnum = #{host_memNum}) order by review_like desc
	</select>
	
	<!-- 호스트가 운영하는 클래스 모든 리뷰3 (옵션명) -->
	<select id="review_likeScore3"  parameterType="int" resultType="com.market.model.ReviewDTO">
		select r.review_num, o.option_name
		from frip_option o join frip_review r 
		on o.option_classnum = r.review_classnum
		where review_classnum in(select class_num from frip_class
		where class_memnum = #{host_memNum}) order by review_like desc
	</select>
	
	<!-- 좋아요 누른 리뷰 리스트 -->
	<select id="likeScore_like_list" parameterType="java.util.Map"  resultType="Integer">
		<!-- select * from frip_like where like_writer = #{mem_num} and like_flag = 3 order by like_target -->
		select NVL(like_target, 0) from frip_review
		left outer join (select like_target from frip_like where like_writer = #{mem_num} and like_flag = 3 order by like_target)
		on review_num  = like_target
		where review_classnum in(select class_num from frip_class where class_memnum = #{host_memNum}) order by review_like desc
	</select>

	
</mapper>